{"version":3,"sources":["helper.js","components/StatBoxes.js","App.js","reportWebVitals.js","index.js"],"names":["numberFormatter","stat","numeral","format","StatBoxes","title","todaysStats","total","className","Card","variant","CardContent","Typography","color","component","App","useState","countries","setCountries","singleCountry","setSingleCountry","countryData","setCountryData","useEffect","fetch","then","res","json","data","a","countriesAll","map","country","name","value","countryInfo","iso3","countriesData","selectCountry","e","selectedCountry","target","url","console","log","todayCases","FormControl","Select","onChange","MenuItem","index","cases","todayRecovered","recovered","todayDeaths","deaths","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8ed4fffa.chunk.js","sourcesContent":["import numeral from \"numeral\";\n\nexport const numberFormatter = (stat) =>\n\t// eslint-disable-next-line no-unused-expressions\n\tstat ? `+${numeral(stat).format(\"0.0a\")}` : \"+0\";\n","import React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\n\nfunction StatBoxes({ title, todaysStats, total }) {\n\treturn (\n\t\t<div className='singleCard'>\n\t\t\t<Card variant='outlined'>\n\t\t\t\t<CardContent>\n\t\t\t\t\t<Typography color='textSecondary'>{title}</Typography>\n\t\t\t\t\t<Typography variant='h5' component='h2' className='todaysNumber'>\n\t\t\t\t\t\t{todaysStats}\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography color='textSecondary'>{total}</Typography>\n\t\t\t\t</CardContent>\n\t\t\t</Card>\n\t\t</div>\n\t);\n}\n\nexport default StatBoxes;\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.scss\";\nimport { numberFormatter } from \"./helper\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport StatBoxes from \"./components/StatBoxes\";\n\nfunction App() {\n\tconst [countries, setCountries] = useState([]);\n\tconst [singleCountry, setSingleCountry] = useState(\"worldwide\");\n\tconst [countryData, setCountryData] = useState({});\n\t// const [flag, setFlag] = useState(false);\n\n\tuseEffect(() => {\n\t\tfetch(\"https://disease.sh/v3/covid-19/all\")\n\t\t\t.then((res) => res.json())\n\t\t\t.then((data) => {\n\t\t\t\tsetCountryData(data);\n\t\t\t});\n\t}, []);\n\n\tuseEffect(() => {\n\t\tconst countriesData = async () => {\n\t\t\tawait fetch(\"https://disease.sh/v3/covid-19/countries\")\n\t\t\t\t.then((res) => res.json())\n\t\t\t\t.then((data) => {\n\t\t\t\t\tconst countriesAll = data.map((country) => ({\n\t\t\t\t\t\tname: country.country,\n\t\t\t\t\t\tvalue: country.countryInfo.iso3,\n\t\t\t\t\t}));\n\t\t\t\t\tsetCountries(countriesAll);\n\t\t\t\t});\n\t\t};\n\n\t\tcountriesData();\n\t}, []);\n\n\tconst selectCountry = async (e) => {\n\t\tconst selectedCountry = e.target.value;\n\t\tconst url =\n\t\t\tselectedCountry === \"worldwide\"\n\t\t\t\t? \"https://disease.sh/v3/covid-19/all\"\n\t\t\t\t: `https://disease.sh/v3/covid-19/countries/${selectedCountry}`;\n\n\t\tawait fetch(url)\n\t\t\t.then((res) => res.json())\n\t\t\t.then((data) => {\n\t\t\t\tsetSingleCountry(selectedCountry);\n\t\t\t\tsetCountryData(data);\n\t\t\t});\n\t};\n\tconsole.log(\"This is formatted ===\", numberFormatter(countryData.todayCases));\n\tconsole.log(\"This is NOT formatted ===\", countryData.todayCases);\n\treturn (\n\t\t<div className='app'>\n\t\t\t<div className='header__body'>\n\t\t\t\t{/* Header */}\n\t\t\t\t<h1 className='app__title'>Covid-19 Tracker</h1>\n\t\t\t\t<div className='app__country__selector'>\n\t\t\t\t\t<FormControl variant='filled'>\n\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\tvalue={singleCountry}\n\t\t\t\t\t\t\tonChange={selectCountry}\n\t\t\t\t\t\t\tclassName='selector__container'>\n\t\t\t\t\t\t\t<MenuItem value='worldwide'>Worldwide</MenuItem>\n\t\t\t\t\t\t\t{countries.map((country, index) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<MenuItem value={country.value} key={index}>\n\t\t\t\t\t\t\t\t\t\t{country.name}\n\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</Select>\n\t\t\t\t\t</FormControl>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className='stats'>\n\t\t\t\t{/* status boxes */}\n\t\t\t\t<StatBoxes\n\t\t\t\t\ttitle={\"Cases\"}\n\t\t\t\t\ttodaysStats={numberFormatter(countryData.todayCases)}\n\t\t\t\t\ttotal={numberFormatter(countryData.cases)}\n\t\t\t\t/>\n\t\t\t\t<StatBoxes\n\t\t\t\t\ttitle={\"Recovered\"}\n\t\t\t\t\ttodaysStats={numberFormatter(countryData.todayRecovered)}\n\t\t\t\t\ttotal={numberFormatter(countryData.recovered)}\n\t\t\t\t/>\n\t\t\t\t<StatBoxes\n\t\t\t\t\ttitle={\"Deaths\"}\n\t\t\t\t\ttodaysStats={numberFormatter(countryData.todayDeaths)}\n\t\t\t\t\ttotal={numberFormatter(countryData.deaths)}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}